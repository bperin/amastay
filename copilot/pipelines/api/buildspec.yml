# Buildspec runs in the build stage of your environment pipeline to generate the environment CloudFormation stack config.
version: 0.2
phases:
  install:
    commands:
      - echo "cd into $CODEBUILD_SRC_DIR"
      - cd $CODEBUILD_SRC_DIR
      # Download the copilot linux binary. You can update this version.
      - wget -q https://ecs-cli-v2-release.s3.amazonaws.com/copilot-linux-v1.34.0
      - mv ./copilot-linux-v1.34.0 ./copilot-linux
      - chmod +x ./copilot-linux
      - echo "Installed copilot-linux"
      - echo "Installing Chrome dependencies..."
      - apt-get update && apt-get install -y --no-install-recommends chromium
      - echo "Chrome installation completed."
      - echo "Verifying Chrome installation..."
      - which google-chrome
      - google-chrome --version
  build:
    commands:
      - echo "Run your tests"
      # - make test
      - echo "Building the application..."
      - echo "Current directory: $(pwd)"
      - echo "Listing files:"
      - ls -la
  post_build:
    commands:
      - ls -l
      - export COLOR="false"
      - export CI="true"
      - pipeline=$(cat $CODEBUILD_SRC_DIR/copilot/pipelines/api/manifest.yml | ruby -ryaml -rjson -e 'puts JSON.pretty_generate(YAML.load(ARGF))')
      - stages=$(echo $pipeline | jq -r '.stages[].name')
      # Generate the cloudformation templates.
      - >
        for env in $stages; do
          echo "Packaging environment: $env"
          ./copilot-linux env package -n $env --output-dir './infrastructure' --upload-assets --force;
          if [ $? -ne 0 ]; then
            echo "Cloudformation stack and config files were not generated. Please check build logs to see if there was a manifest validation error." 1>&2;
            exit 1;
          fi
        done;
      - ls -lah ./infrastructure
artifacts:
  files:
    - "infrastructure/*"
